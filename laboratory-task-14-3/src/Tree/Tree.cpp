#include "Tree.hpp"

/*================================================================================*/
/*================================= Конструкторы =================================*/
/*================================================================================*/

Tree::Tree(std::string initName, uint16_t initAge, TypeTree initType) : name(initName), age(initAge), type(initType)
{}
Tree::~Tree()
{}


/*================================================================================*/
/*==================================== Геттеры ===================================*/
/*================================================================================*/

std::string Tree::getName() const
{
	return this->name;
}

uint16_t Tree::getAge() const
{
	return this->age;
}

TypeTree Tree::getType() const
{
	return this->type;
}


/*================================================================================*/
/*================================= Вывод в поток ================================*/
/*================================================================================*/

std::ostream& Tree::print(std::ostream& out)
{
	out << "\n==========================================\n";
	out << "\nName:\t\t\t\t" << name;
	out << "\nAge:\t\t\t\t" << age;
	out << "\nType:\t\t\t\t" << (type == TypeTree::deciduous ? "deciduous" : "coniferous");
	return out;
}
