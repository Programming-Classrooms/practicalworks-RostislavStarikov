#define _CRT_SECURE_NO_WARNINGS_
#include "Person.hpp"

/*================================================================================*/
/*================================== Конструктор =================================*/
/*================================================================================*/


Person::Person() : fullName(nullptr) {}

Person::Person(const char* name) {
    fullName = new char[strlen(name) + 1];
    strcpy(fullName, name);
}

Person::Person(const Person& other)
{
    fullName = new char[strlen(other.fullName) + 1];
    strcpy(fullName, other.fullName);
}

Person::~Person()
{
    delete[] fullName;
}

/*================================================================================*/
/*==================================== Геттер ====================================*/
/*================================================================================*/


char* Person::getFullName() const
{
    return fullName;
}

/*================================================================================*/
/*==================================== Сеттер ====================================*/
/*================================================================================*/


void Person::setFullName(const char* name)
{
    delete[] fullName; // Освобождаем предыдущую память
    fullName = new char[strlen(name) + 1];
    strcpy(fullName, name);
}

/*================================================================================*/
/*================================ Функция вывода ================================*/
/*================================================================================*/


void Person::print(std::ostream& out) const
{
    out << *this;
}

/*================================================================================*/
/*===================== Перегрузка операторов ввода и вывода =====================*/
/*================================================================================*/


std::istream& operator>>(std::istream& in, Person& obj)
{
    std::cout << "\nPlease, enter full name of persone:\t";
    char buffer[100];
    in.getline(buffer, 100);
    obj.setFullName(buffer);
    return in;
}

std::ostream& operator<<(std::ostream& out, const Person& obj)
{
    out << "\n=====================================================================\n";
    std::cout << "\nFull name:\t";
    if (obj.fullName) {
        out << obj.fullName;
    }
    out << "\n=====================================================================\n";
    return out;
}
